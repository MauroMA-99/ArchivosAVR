
1.0Encender_Led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000132  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000cc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000132  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000161  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000b60  00000000  00000000  00000181  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000008b9  00000000  00000000  00000ce1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000022f  00000000  00000000  0000159a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000017cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000318  00000000  00000000  000017f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00001b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .text         00000004  000000da  000000da  0000012e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b18  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .text.main    0000000e  000000cc  000000cc  00000120  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
   8:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
   c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  10:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  14:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  18:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  1c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  20:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  24:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  28:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  2c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  30:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  34:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  38:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  3c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  40:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  44:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  48:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  4c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  50:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  54:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  58:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  5c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  60:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  64:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  68:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  6c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  70:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  74:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  78:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  7c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  80:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  84:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  88:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  8c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  90:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  94:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  98:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  9c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  a0:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  a4:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  a8:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  ac:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  b0:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <_etext>
  c4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <_exit>

000000c8 <_exit>:
  c8:	f8 94       	cli

000000ca <__stop_program>:
  ca:	ff cf       	rjmp	.-2      	; 0xca <__stop_program>

Disassembly of section .text:

000000da <__bad_interrupt>:
  da:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

000000cc <main>:
#include <avr/io.h>

int main(void)
{
	//Configuraciones Iniciales
	DDRB |= (1<<DDRB5);//0b00100000;//Configuramos el pin PB5 como salida digital
  cc:	84 b1       	in	r24, 0x04	; 4
  ce:	80 62       	ori	r24, 0x20	; 32
  d0:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1<<PORTB5);//0b00100000;//Mandamos un 1 logico al pin PB5.
  d2:	85 b1       	in	r24, 0x05	; 5
  d4:	80 62       	ori	r24, 0x20	; 32
  d6:	85 b9       	out	0x05, r24	; 5
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <main+0xc>
